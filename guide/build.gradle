/**
 *  Copyright 2020 Sinlov Lotqi <sinlovgmppt@gmail.com>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'java'

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    options.encoding = "UTF-8"
}

apply from: rootProject.file("gradle/jacoco/jacoco-simple.gradle")

dependencies {
    // implementation fileTree(dir: 'libs', include: ['*.jar'])
    // testCompile test_implement.junit
    testImplementation test_implement["junit:junit"]
    testImplementation test_implement["org.testng:testng"]
    // https://docs.gradle.org/4.6/release-notes.html
    testRuntimeOnly test_implement["org.junit.vintage:junit-vintage-engine"]

    // compile base_depend.commons_cli
    implementation base_depend["commons-codec:commons-codec"]
    implementation base_depend["org.json:json"]
    implementation base_depend["com.github.javafaker:javafaker"]
    // compileOnly base_depend.commons_cli
}
test {
    // https://docs.gradle.org/4.6/release-notes.html
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
        events "PASSED", "FAILED", "SKIPPED"
    }
    failFast = true
    jacoco {
//        enabled = false
        includeNoLocationClasses = false
        excludes = [
//                "**/com/sinlov/java/playground/*"
        ]
    }
    systemProperty "java.library.path", file("${project(":hello").buildDir}/lib/main/debug").absolutePath
    systemProperty "java.library.path", file("${project(":datatype").buildDir}/lib/main/debug").absolutePath
}

test.dependsOn  ':hello:linkDebug'

//uploadArchives {
//    repositories {
//        flatDir {
//            dirs 'build/repos'
//        }
//    }
//}
